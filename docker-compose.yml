version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: fpl-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-fpl_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-fpl_password}
      POSTGRES_DB: ${POSTGRES_DB:-fpl_analytics}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./database/migrations:/docker-entrypoint-initdb.d/migrations
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-fpl_user} -d ${POSTGRES_DB:-fpl_analytics}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: fpl-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build: ./backend
    container_name: fpl-backend
    restart: unless-stopped
    environment:
      - DEBUG=${DEBUG:-false}
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER:-fpl_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-fpl_password}
      - POSTGRES_DB=${POSTGRES_DB:-fpl_analytics}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-http://localhost:3000,http://localhost:8050}
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Dashboard
  frontend:
    build: ./frontend
    container_name: fpl-frontend
    restart: unless-stopped
    environment:
      - DEBUG=${DEBUG:-false}
      - BACKEND_URL=http://backend:8000
    volumes:
      - ./frontend:/app
    ports:
      - "8050:8050"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8050"]
      interval: 30s
      timeout: 10s
      retries: 3

  # NGINX Reverse Proxy
  nginx:
    build: ./nginx
    container_name: fpl-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-available:/etc/nginx/sites-available
      # Mount SSL certificates for HTTPS (when available)
      - ./certs:/etc/nginx/ssl:ro
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: fpl-network
    driver: bridge